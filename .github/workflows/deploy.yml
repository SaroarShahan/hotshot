name: deploy

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']
  workflow_dispatch: # on button click

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm i --location=global yarn
      - run: yarn
      - run: yarn build

  deploy:
    needs: build
    if: github.repository_owner == "SaroarShahan" && ((github.event_name == "push") || (github.event.pull_request.head.repo.full_name == github.repository))
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      steps:
        - name: start deployment
          uses: bobheadxi/deployments@v1
          id: deployment
          with:
            step: start
            token: ${{ secrets.GITHUB_TOKEN }}
            env: ${{ fromJSON('["Production"]')[github.ref != 'refs/heads/master'] }}

        - uses: actions/checkout@v3

        - uses: amondnet/vercel-action@v20
          with:
            vercel-token: ${{ secrets.VERCEL_TOKEN }}
            vercel-args: ${{ fromJSON('["--prod", ""]')[github.ref != 'refs/heads/master'] }}
            vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
            vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
            scope: ${{ secrets.VERCEL_ORG_ID }}
            working-directory: ./

        - name: update deployment status
          uses: bobheadxi/deployments@v1
          if: always()
          with:
            step: finish
            token: ${{ secrets.GITHUB_TOKEN }}
            status: ${{ job.status }}
            env: ${{ steps.deployment.outputs.env }}
            deployment_id: ${{ steps.deployment.outputs.deployment_id }}
